managed implementation in class zbp_etr_ddl_i_incoming_delhead unique;
strict ( 2 );

define behavior for zetr_ddl_i_incoming_delhead //alias <alias_name>
persistent table zetr_t_icdlv
lock master
authorization master ( instance )
//etag master <field_name>
{
  mapping for zetr_t_icdlv
    {
      DocumentUUID        = docui;
      CompanyCode         = bukrs;
      EnvelopeUUID        = envui;
      DeliveryUUID        = dlvui;
      DeliveryID          = dlvno;
      IntegratorUUID      = dlvii;
      QueryID             = dlvqi;
      TaxID               = taxid;
      Aliass              = aliass;
      DocumentDate        = bldat;
      ReceiveDate         = recdt;
      Amount              = wrbtr;
      Currency            = waers;
      ProfileID           = prfid;
      DeliveryType        = dlvty;
      Printed             = prntd;
      Processed           = procs;
      Archived            = archv;
      LatestNote          = lnote;
      LatestNoteCreatedBy = luser;
      ResponseStatus      = resst;
      TRAStatusCode       = radsc;
      StatusDetail        = staex;
      ResponseUUID        = ruuid;
      ItemResponseStatus  = itmrs;
    }
  //  create;
  //  update;
  //  delete;
  field ( readonly : update ) DocumentUUID;
  association _deliveryContents { create; }
  association _deliveryItems;
  association _deliveryLogs { create; }
}

define behavior for zetr_ddl_i_incoming_delcont //alias <alias_name>
persistent table zetr_t_arcd
lock dependent by _incomingDeliveries
authorization dependent by _incomingDeliveries
//etag master <field_name>
{
  mapping for zetr_t_arcd
    {
      ArchiveUUID  = arcid;
      DocumentUUID = docui;
      ContentType  = conty;
      Content      = contn;
    }
  update;
  //  delete;
  field ( readonly ) DocumentUUID;
  field ( readonly : update ) ContentType;
  association _incomingDeliveries;
}

define behavior for zetr_ddl_i_incoming_delitem //alias <alias_name>
persistent table zetr_t_icdli
lock dependent by _incomingDeliveries
authorization dependent by _incomingDeliveries
//etag master <field_name>
{
  mapping for zetr_t_icdli
    {
      DocumentUUID                   = docui;
      ItemNo                         = linno;
      MaterialDescription            = mdesc;
      Description                    = descr;
      BuyerItemIdentification        = buyii;
      SellerItemIdentification       = selii;
      ManufacturerItemIdentification = manii;
      Price                          = netpr;
      Currency                       = waers;
      Quantity                       = menge;
      UnitOfMeasure                  = meins;
      ReceivedQuantity               = recqt;
      UnacceptableQuantity           = napqt;
      MissingQuantity                = misqt;
      ExcessQuantity                 = ovsqt;
      RejectedProductDescription     = rejpd;
      LateDeliveryCompliant          = ldlvc;
    }
  update;
  //  delete;
  field ( readonly ) DocumentUUID;
  field ( readonly : update ) ItemNo;
  association _incomingDeliveries;
}

define behavior for zetr_ddl_i_incoming_dellogs //alias <alias_name>
persistent table zetr_t_logs
lock dependent by _incomingDeliveries
authorization dependent by _incomingDeliveries
//etag master <field_name>
{
  mapping for zetr_t_logs
    {
      LogUUID      = logui;
      DocumentUUID = docui;
      CreatedBy    = uname;
      CreationDate = datum;
      CreationTime = uzeit;
      LogCode      = logcd;
      LogNote      = lnote;
    }
  update;
  //  delete;
  field ( readonly ) DocumentUUID;
  field ( readonly : update ) LogUUID;
  association _incomingDeliveries;
}